# Token API

## Overview
This is a FastAPI-based token authentication service using PostgreSQL as the database. The application is designed to run both locally and in a Dockerized environment.

## Running Locally
To run the application locally, follow these steps:

### Install dependencies
```bash
pip install -r requirements.txt
```

### Start the PostgreSQL database using Docker
```bash
docker-compose up -d db
```

### Start the FastAPI application
```bash
uvicorn app.main:app --reload
```

## Running with Docker
To run the application in a Docker container, execute the following commands:

### Stop and remove any existing containers and volumes
```bash
docker-compose down -v
```

### Build the Docker images
```bash
docker-compose build
```

### Start the containers
```bash
docker-compose up --force-recreate
```

## Running Tests
To run the test suite using Pytest with code coverage:
```bash
pytest --cov=app --cov-report=term-missing
```

## Environment Variables
The application expects the following environment variables:

### Backend (.env)
```ini
DATABASE_URL=postgresql://user:password@localhost:5432/token_api
DOCKER_ENV=1  # Set to 1 when running in Docker
```

## Notes
- A Postman collection (`token_api.postman_collection.json`) is included in the repository to test API routes easily.
- The application automatically detects if it is running in a Docker container and adjusts the database hostname accordingly.
- The API documentation is available at `http://localhost:8000/docs` when the application is running.
- The database schema is automatically created using `Base.metadata.create_all()` during startupâ€”no manual migrations required.
